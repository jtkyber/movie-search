{"version":3,"sources":["model.js","components/MoreInfo.js","components/ListViewMovie.js","components/CardViewMovie.js","components/MovieList.js","components/ToggleViewIcon.js","App.js","reportWebVitals.js","index.js"],"names":["model","stored","persist","cardView","favorites","storage","movieResults","toggleCardView","action","state","setMovieResults","mList","MoreInfo","props","Modal","size","centered","Header","closeButton","Title","id","Body","movie","imdbID","Footer","Button","onClick","onHide","ListViewMovie","useState","modalShow","setModalShow","className","src","Poster","alt","Type","Year","show","CardViewMovie","MovieList","useStoreState","undefined","map","ToggleViewIcon","useStoreActions","actions","App","currentSearch","setCurrentSearch","findMovies","a","fetch","res","json","movies","Search","console","log","onChange","e","target","value","type","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aec80225.chunk.js","sourcesContent":["import { action, persist } from 'easy-peasy';\r\n\r\nconst model = {\r\n    // State\r\n\r\n    stored: persist(\r\n        {\r\n            cardView: false,\r\n            favorites: [],\r\n        },\r\n        {\r\n            storage: 'localStorage',\r\n        }\r\n    ),\r\n\r\n    movieResults: [],\r\n\r\n\r\n\r\n    // Actions\r\n\r\n    toggleCardView: action(state => {\r\n        state.stored.cardView = !state.stored.cardView;\r\n    }),\r\n\r\n    setMovieResults: action((state, mList) => {\r\n        state.movieResults = mList;\r\n    })\r\n}\r\n\r\nexport default model;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// bySearch: [\r\n//         {\r\n//             Title: \"The Lord of the Rings: The Fellowship of the Ring\",\r\n//             Year: \"2001\",\r\n//             imdbID: \"tt0120737\",\r\n//             Type: \"movie\",\r\n//             Poster: \"https://m.media-amazon.com/images/M/MV5BN2EyZjM3NzUtNWUzMi00MTgxLWI0NTctMzY4M2VlOTdjZWRiXkEyXkFqcGdeQXVyNDUzOTQ5MjY@._V1_SX300.jpg\"\r\n//         },\r\n//         {\r\n//             Title: \"The Lord of the Rings: The Return of the King\",\r\n//             Year: \"2003\",\r\n//             imdbID: \"tt0167260\",\r\n//             Type: \"movie\",\r\n//             Poster: \"https://m.media-amazon.com/images/M/MV5BNzA5ZDNlZWMtM2NhNS00NDJjLTk4NDItYTRmY2EwMWZlMTY3XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\"\r\n//         },\r\n//         {\r\n//             Title: \"The Lord of the Rings: The Two Towers\",\r\n//             Year: \"2002\",\r\n//             imdbID: \"tt0167261\",\r\n//             Type: \"movie\",\r\n//             Poster: \"https://m.media-amazon.com/images/M/MV5BZGMxZTdjZmYtMmE2Ni00ZTdkLWI5NTgtNjlmMjBiNzU2MmI5XkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\"\r\n//         },\r\n//         {\r\n//             Title: \"The Lord of the Rings: The Two Towers\",\r\n//             Year: \"2002\",\r\n//             imdbID: \"tt01672610\",\r\n//             Type: \"movie\",\r\n//             Poster: \"https://m.media-amazon.com/images/M/MV5BZGMxZTdjZmYtMmE2Ni00ZTdkLWI5NTgtNjlmMjBiNzU2MmI5XkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\"\r\n//         },\r\n//         {\r\n//             Title: \"The Lord of the Rings: The Two Towers\",\r\n//             Year: \"2002\",\r\n//             imdbID: \"tt016726100\",\r\n//             Type: \"movie\",\r\n//             Poster: \"https://m.media-amazon.com/images/M/MV5BZGMxZTdjZmYtMmE2Ni00ZTdkLWI5NTgtNjlmMjBiNzU2MmI5XkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\"\r\n//         },\r\n//         {\r\n//             Title: \"The Lord of the Rings: The Two Towers\",\r\n//             Year: \"2002\",\r\n//             imdbID: \"tt0167261000\",\r\n//             Type: \"movie\",\r\n//             Poster: \"https://m.media-amazon.com/images/M/MV5BZGMxZTdjZmYtMmE2Ni00ZTdkLWI5NTgtNjlmMjBiNzU2MmI5XkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\"\r\n//         },\r\n//         {\r\n//             Title: \"The Lord of the Rings: The Two Towers\",\r\n//             Year: \"2002\",\r\n//             imdbID: \"tt01672610000\",\r\n//             Type: \"movie\",\r\n//             Poster: \"https://m.media-amazon.com/images/M/MV5BZGMxZTdjZmYtMmE2Ni00ZTdkLWI5NTgtNjlmMjBiNzU2MmI5XkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\"\r\n//         },\r\n//         {\r\n//             Title: \"The Lord of the Rings: The Two Towers\",\r\n//             Year: \"2002\",\r\n//             imdbID: \"tt016726100000\",\r\n//             Type: \"movie\",\r\n//             Poster: \"https://m.media-amazon.com/images/M/MV5BZGMxZTdjZmYtMmE2Ni00ZTdkLWI5NTgtNjlmMjBiNzU2MmI5XkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\"\r\n//         }\r\n//     ],\r\n//     byIdOrTitle: [\r\n//         {\r\n//             Title: \"The Lord of the Rings: The Fellowship of the Ring\",\r\n//             Year: \"2001\",\r\n//             Rated: \"PG-13\",\r\n//             Released: \"19 Dec 2001\",\r\n//             Runtime: \"178 min\",\r\n//             Genre: \"Action, Adventure, Drama\",\r\n//             Director: \"Peter Jackson\",\r\n//             Writer: \"J.R.R. Tolkien, Fran Walsh, Philippa Boyens\",\r\n//             Actors: \"Elijah Wood, Ian McKellen, Orlando Bloom\",\r\n//             Plot: \"A meek Hobbit from the Shire and eight companions set out on a journey to destroy the powerful One Ring and save Middle-earth from the Dark Lord Sauron.\",\r\n//             Language: \"English, Sindarin\",\r\n//             Country: \"New Zealand, United States\",\r\n//             Awards: \"Won 4 Oscars. 120 wins & 126 nominations total\",\r\n//             Poster: \"https://m.media-amazon.com/images/M/MV5BN2EyZjM3NzUtNWUzMi00MTgxLWI0NTctMzY4M2VlOTdjZWRiXkEyXkFqcGdeQXVyNDUzOTQ5MjY@._V1_SX300.jpg\",\r\n//             Ratings: [\r\n//                 {\r\n//                     Source:\"Internet Movie Database\",\r\n//                     Value:\"8.8/10\"\r\n//                 },\r\n//                 {\r\n//                     Source:\"Rotten Tomatoes\",\r\n//                     Value:\"91%\"\r\n//                 },\r\n//                 {\r\n//                     Source:\"Metacritic\",\r\n//                     Value:\"92/100\"\r\n//                 },\r\n//             ],\r\n//             Metascore:\"92\",\r\n//             imdbRating:\"8.8\",\r\n//             imdbVotes:\"1,706,179\",\r\n//             imdbID:\"tt0120737\",\r\n//             Type:\"movie\",\r\n//             DVD:\"28 Jun 2011\",\r\n//             BoxOffice:\"$315,710,750\",\r\n//             Production:\"New Line Cinema, Saul Zaentz Company, WingNut Films\"\r\n//         },\r\n//         {\r\n//             Title: \"The Lord of the Rings: The Fellowship of the Ring\",\r\n//             Year: \"2001\",\r\n//             Rated: \"PG-13\",\r\n//             Released: \"19 Dec 2001\",\r\n//             Runtime: \"178 min\",\r\n//             Genre: \"Action, Adventure, Drama\",\r\n//             Director: \"Peter Jackson\",\r\n//             Writer: \"J.R.R. Tolkien, Fran Walsh, Philippa Boyens\",\r\n//             Actors: \"Elijah Wood, Ian McKellen, Orlando Bloom\",\r\n//             Plot: \"A meek Hobbit from the Shire and eight companions set out on a journey to destroy the powerful One Ring and save Middle-earth from the Dark Lord Sauron.\",\r\n//             Language: \"English, Sindarin\",\r\n//             Country: \"New Zealand, United States\",\r\n//             Awards: \"Won 4 Oscars. 120 wins & 126 nominations total\",\r\n//             Poster: \"https://m.media-amazon.com/images/M/MV5BN2EyZjM3NzUtNWUzMi00MTgxLWI0NTctMzY4M2VlOTdjZWRiXkEyXkFqcGdeQXVyNDUzOTQ5MjY@._V1_SX300.jpg\",\r\n//             Ratings: [\r\n//                 {\r\n//                     Source:\"Internet Movie Database\",\r\n//                     Value:\"8.8/10\"\r\n//                 },\r\n//                 {\r\n//                     Source:\"Rotten Tomatoes\",\r\n//                     Value:\"91%\"\r\n//                 },\r\n//                 {\r\n//                     Source:\"Metacritic\",\r\n//                     Value:\"92/100\"\r\n//                 },\r\n//             ],\r\n//             Metascore:\"92\",\r\n//             imdbRating:\"8.8\",\r\n//             imdbVotes:\"1,706,179\",\r\n//             imdbID:\"tt0120737\",\r\n//             Type:\"movie\",\r\n//             DVD:\"28 Jun 2011\",\r\n//             BoxOffice:\"$315,710,750\",\r\n//             Production:\"New Line Cinema, Saul Zaentz Company, WingNut Films\"\r\n//         },\r\n//         {\r\n//             Title: \"The Lord of the Rings: The Fellowship of the Ring\",\r\n//             Year: \"2001\",\r\n//             Rated: \"PG-13\",\r\n//             Released: \"19 Dec 2001\",\r\n//             Runtime: \"178 min\",\r\n//             Genre: \"Action, Adventure, Drama\",\r\n//             Director: \"Peter Jackson\",\r\n//             Writer: \"J.R.R. Tolkien, Fran Walsh, Philippa Boyens\",\r\n//             Actors: \"Elijah Wood, Ian McKellen, Orlando Bloom\",\r\n//             Plot: \"A meek Hobbit from the Shire and eight companions set out on a journey to destroy the powerful One Ring and save Middle-earth from the Dark Lord Sauron.\",\r\n//             Language: \"English, Sindarin\",\r\n//             Country: \"New Zealand, United States\",\r\n//             Awards: \"Won 4 Oscars. 120 wins & 126 nominations total\",\r\n//             Poster: \"https://m.media-amazon.com/images/M/MV5BN2EyZjM3NzUtNWUzMi00MTgxLWI0NTctMzY4M2VlOTdjZWRiXkEyXkFqcGdeQXVyNDUzOTQ5MjY@._V1_SX300.jpg\",\r\n//             Ratings: [\r\n//                 {\r\n//                     Source:\"Internet Movie Database\",\r\n//                     Value:\"8.8/10\"\r\n//                 },\r\n//                 {\r\n//                     Source:\"Rotten Tomatoes\",\r\n//                     Value:\"91%\"\r\n//                 },\r\n//                 {\r\n//                     Source:\"Metacritic\",\r\n//                     Value:\"92/100\"\r\n//                 },\r\n//             ],\r\n//             Metascore:\"92\",\r\n//             imdbRating:\"8.8\",\r\n//             imdbVotes:\"1,706,179\",\r\n//             imdbID:\"tt0120737\",\r\n//             Type:\"movie\",\r\n//             DVD:\"28 Jun 2011\",\r\n//             BoxOffice:\"$315,710,750\",\r\n//             Production:\"New Line Cinema, Saul Zaentz Company, WingNut Films\"\r\n//         }\r\n//     ],\r\n","import './MoreInfo.css';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst MoreInfo = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Modal heading\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <h4>{props.movie.imdbID}</h4>\r\n            <p>\r\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n              dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n              consectetur ac, vestibulum at eros.\r\n            </p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={props.onHide}>Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default MoreInfo;\r\n","import { useState } from 'react';\r\nimport MoreInfo from './MoreInfo';\r\nimport './ListViewMovie.css';\r\n\r\nconst ListViewMovie = ({ movie }) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div onClick={() => setModalShow(true)} className='listViewBlock'>\r\n                <div className='listPoster'>\r\n                    <img src={movie.Poster} alt='poster' />\r\n                </div>\r\n                <div className='listTitle'>\r\n                    <h5>{movie.Title}</h5>\r\n                </div>\r\n                <div className='listType'>\r\n                    <h6>{movie.Type}</h6>\r\n                </div>\r\n                <div className='listYear'>\r\n                    <h6>{movie.Year}</h6>\r\n                </div>\r\n            </div>\r\n            <MoreInfo movie={movie} show={modalShow} onHide={() => setModalShow(false)} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListViewMovie;\r\n","import { useState } from 'react';\r\nimport MoreInfo from './MoreInfo';\r\nimport './CardViewMovie.css';\r\n\r\nconst CardViewMovie = ({ movie }) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div onClick={() => setModalShow(true)} className='cardViewBlock'>\r\n                <div className='cardPoster'>\r\n                    <img src={movie.Poster} alt='poster' />\r\n                </div>\r\n                <div className='cardTitle'>\r\n                    <h5>{movie.Title}</h5>\r\n                </div>\r\n                <div className='cardType'>\r\n                    <h6>{movie.Type}</h6>\r\n                </div>\r\n                <div className='cardYear'>\r\n                    <h6>{movie.Year}</h6>\r\n                </div>\r\n            </div>\r\n            <MoreInfo movie={movie} show={modalShow} onHide={() => setModalShow(false)} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardViewMovie;\r\n","import ListViewMovie from './ListViewMovie';\r\nimport CardViewMovie from './CardViewMovie';\r\nimport { useStoreState } from 'easy-peasy';\r\n\r\nconst MovieList = () => {\r\n    const { cardView, movieResults } = useStoreState(state => ({\r\n        cardView: state.stored.cardView,\r\n        movieResults: state.movieResults\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            {\r\n            movieResults !== undefined\r\n            ?\r\n              movieResults.map(movie => {\r\n                return(\r\n                    cardView\r\n                    ? <CardViewMovie key={movie.imdbID} movie={movie} />\r\n                    : <ListViewMovie key={movie.imdbID} movie={movie} />\r\n                )\r\n              })\r\n              : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieList;\r\n","import './ToggleViewIcon.css';\r\nimport { useStoreState, useStoreActions } from 'easy-peasy';\r\n\r\nconst ToggleViewIcon = () => {\r\n    const cardView = useStoreState(state => state.stored.cardView);\r\n    const toggleCardView = useStoreActions(actions => actions.toggleCardView)\r\n\r\n    return (\r\n        cardView === false\r\n        ?\r\n        <div onClick={toggleCardView} className='toggleViewIcon cardViewIcon'>\r\n            <div className='block'></div>\r\n            <div className='block'></div>\r\n            <div className='block'></div>\r\n            <div className='block'></div>\r\n            <div className='block'></div>\r\n            <div className='block'></div>\r\n            <div className='block'></div>\r\n            <div className='block'></div>\r\n            <div className='block'></div>\r\n        </div>\r\n        :\r\n        <div onClick={toggleCardView} className='toggleViewIcon listViewIcon'>\r\n            <div className='dot'></div>\r\n            <div className='line'></div>\r\n            <div className='dot'></div>\r\n            <div className='line'></div>\r\n            <div className='dot'></div>\r\n            <div className='line'></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleViewIcon;\r\n","import { useState } from 'react';\nimport { useStoreState, useStoreActions } from 'easy-peasy';\nimport MovieList from './components/MovieList';\nimport ToggleViewIcon from './components/ToggleViewIcon';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  const cardView = useStoreState(state => state.stored.cardView);\n  const setMovieResults = useStoreActions(actions => actions.setMovieResults);\n  const [currentSearch, setCurrentSearch] = useState('');\n\n  const findMovies = async () => {\n    setCurrentSearch('');\n    try {\n      const res = await fetch(`https://movie-database-imdb-alternative.p.rapidapi.com/?s=${currentSearch}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"387e27d97fmsh8e24e62224ddd7bp139e87jsn4629eff6112a\",\n        \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\"\n      }\n    })\n      const movies = await res.json();\n      setMovieResults(movies.Search);\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div className='appContainer'>\n      <header>\n        <div className='header'></div>\n      </header>\n      <div className='grid'>\n        <div className='searchBoxContainer'>\n          <input onChange={(e) => setCurrentSearch(e.target.value)} value={currentSearch} className='searchBox' type='text' placeholder='Search for a Movie' />\n          <button onClick={findMovies} className='enter'>Enter</button>\n          <button className='favorites'>Favorites</button>\n          <ToggleViewIcon />\n        </div>\n        <div className='resultContainer'>\n          <div className= {cardView ? 'cardContainer' : 'listContainer'}>\n            <MovieList />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StoreProvider, createStore } from 'easy-peasy';\nimport model from './model';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(model);\n\nReactDOM.render(\n    <StoreProvider store={store}>\n        <App />\n    </StoreProvider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}